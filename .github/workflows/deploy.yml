name: Deploy to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: image-gallery-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Image pushed to Amazon ECR successfully"

      - name: Upload deployment files to S3
        run: |
          # Replace placeholders in taskdef.json
          sed -i "s/<AWS_REGION>/${{ env.AWS_REGION }}/g" taskdef.json
          sed -i "s/<IMAGE1_NAME>/$ECR_REGISTRY\/$ECR_REPOSITORY:$IMAGE_TAG/g" taskdef.json
          
          # Create a deployment package
          zip -r deploy.zip taskdef.json appspec.yaml
          
          # Upload to S3
          aws s3 cp deploy.zip s3://imagegallery-pipeline-artifacts/deploy.zip
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: image-gallery-app
          IMAGE_TAG: latest
          AWS_REGION: eu-west-1
