version: "3.8"

services:
  # MySQL Database
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-testing24}
      MYSQL_DATABASE: ${DB_NAME:-imageDB}
      MYSQL_USER: ${DB_USER:-eddie}
      MYSQL_PASSWORD: ${DB_PASSWORD:-testing24}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Application
  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database
      DB_HOST: db
      DB_NAME: ${DB_NAME:-imageDB}
      DB_USER: ${DB_USER:-eddie}
      DB_PASSWORD: ${DB_PASSWORD:-testing24}
      PORT: 3001
      # AWS S3
      AWS_REGION: ${AWS_REGION:-eu-west-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-AKIAXGZAL5VWJUBOAJOX}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-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}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME:-photo-gallery101-bk}
    volumes:
      - ./server/public:/usr/src/app/public
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
